{
  "Begin end": {
  "prefix": "begin",
  "body": [
    "begin",
    "\t$1",
    "end;"
  ],
  "description": "Begin end"
  },

  "block comment": {
  "prefix": "blockcomment",
  "body": [
    "----------------------------------------------------------------------------",
    "--",
    "--\t$1",
    "--",
    "----------------------------------------------------------------------------"
  ],
  "description": "Block Comment"
  },
  
"handler": {
  "prefix": "handler",
  "body": [
    "handler ${1:MyHandler};",
    "begin",
    "\t$0",
    "end;"
  ],
  "description": "handler"
  },
    
  "else end": {
  "prefix": "else",
  "body": [
    "else",
    "\t$0",
    "end if;"
  ],
  "description": "else end"
  },
  
  "for loop": {
  "prefix": "for",
  "body": [
    "for ${1:i} := ${2:1} to ${3:max}",
    "loop",
    "\t$0",
    "end loop;"
  ],
  "description": "for loop"
  },
  
  "for (no begin end)": {
  "prefix": "forb",
  "body": [
    "for ${1:i} := ${2:0} to ${3:max} do",
    "\t$0"
  ],
  "description": "for (no begin end)"
  },
  
  "function end": {
  "prefix": "function",
  "body": [
    "function ${1:MyFunction}(${2:params}:${3:integer};",
    "begin",
    "\t$0",
    "end;"
  ],
  "description": "function end"
  },
  
  "if (no begin end)": {
  "prefix": "if",
  "body": [
    "if ${1:True} then",
    "\t$0"
  ],
  "description": "if (no begin end)"
  },
  
  "if end if": {
  "prefix": "ifb",
  "body": [
    "if ${1:True} then",
    "\t$0",
    "end if;"
  ],
  "description": "if end"
  },
  
  "if else (no begin end)": {
  "prefix": "ife",
  "body": [
    "if ${1:True} then",
    "\t${2:then code here}",
    "else",
    "\t${3:else code here}"
  ],
  "description": "if else (no begin end)"
  },
  
  "if else end": {
  "prefix": "ifeb",
  "body": [
    "if ${1:True} then",
    "\t${2:then code here}",
    "else",
    "\t${3:else code here}",
    "end if;"
  ],
  "description": "if else end"
  },
  
  "procedure": {
  "prefix": "procedure",
  "body": [
    "procedure ${1:MyProcedure};",
    "begin",
    "\t$0",
    "end;"
  ],
  "description": "procedure"
  },
  
  "GetGross ": {
  "prefix": "GetGross",
  "body": [
    "GetGross(${1:scaleNum}, ${2:Units}, ${3:GrossOut});"
  ],
  "description": "getgross"
  },

  "GetNet ": {
  "prefix": "GetNet",
  "body": [
    "GetNet(${1:scaleNum}, ${2:Units}, ${3:NetOut});"
  ],
  "description": "getnet"
  },
  "GetTare ": {
  "prefix": "GetTare",
  "body": [
    "GetTare(${1:scaleNum}, ${2:Units}, ${3:TareOut});"
  ],
  "description": "GetTare"
  },
  "GetFilteredCount ": {
  "prefix": "GetFilteredCount",
  "body": [
    "GetFilteredCount(${1:scaleNum}, ${2:FilteredCount});"
  ],
  "description": "GetFilteredCount"
  },
  "GetRawCount ": {
  "prefix": "GetRawCount",
  "body": [
    "GetRawCount(${1:scaleNum}, ${2:RawCount});"
  ],
  "description": "getRawCount"
  },
  "SetImageWidgetPath ": {
  "prefix": "SetImageWidgetPath",
  "body": [
      "SetImageWidgetPath(${1:Widget_int}, ${2:fileName_string});"
  ],
  "description": "SetImageWidgetPath"
  },

  "Debug": {
     "prefix": "Debug",
     "body": ["WriteLn(g_iDebug, \"${1:int_lineNumber 2:string_Message}\");"],
     "description": "Debug"
  },

  "WriteLn": {

  "prefix": "WriteLn",
  "body": [
   "WriteLn(${1:int_Port}, \"${2:string_message}\")"

    ],
  "description": "WriteLn" 
  },

  "While Loop": {
    "prefix": "while",
    "body": [
    "while ${string_condition}",
    "loop",
    "\t$0",
    "end loop;"
  ],
    "description": "While Loop"
 },

 "Left$": {
    "prefix": "Left$",
    "body": [
    "Left$(${1:String_Name}; ${2:int_len})"
    ],
    "description": "Left$"
 },

  "SetLabelText": {
     "prefix": "SetLabelText",
    "body": [
        "SetLabelText(${1:int_LabelID}, \"${2:string_Message}\");"
    ],
  "description": "SetLabelText"
 },

 "DisplayStatus": {

    "prefix": "DisplayStatus",
    "body": [
      "DisplayStatus(\"${string_message}\");"
    ],
    "description": "DisplayStatus"
 },

 "For Loop": {
    "prefix": "for loop",
    "body": [
      "for i := 1 to ${1:int_Count}",
      "loop",
      "\t$2",
      "end loop;"
    ],
    "description": "For Loop"
 },

 "IfElse": {
    "prefix": "if else",
    "body": [
      "if ${1:string_command} then",
      "\t$2",
      "else",
      "\t$3",
      "end if;"
    ],
    "description": "if else end if;"
 },

"GetCapacity ": {"prefix": "GetCapacity","body": ["GetCapacity(${1:scaleNum}, ${2:ScaleCapacity});"],"description": "getCapacity"},
"GetMV ": {"prefix": "GetMV","body": ["GetMV(${1:scaleNum}, ${2:MV});"],"description": "GetMV"},
"GetGrads ": {"prefix": "GetGrads","body": ["GetGrads(${1:scaleNum}, ${2:G});"],"description": "GetGrads"},
"GetCountBy ": {"prefix": "GetCountBy","body": ["GetCountBy(${1:scaleNum}, ${2:Units}, ${3:C});"],"description": "GetCountBy"},
"SetAlgOut ": {"prefix": "SetAlgOut","body": ["SetAlgOut(${1:scaleNum}, ${2:P});"],"description": "SetAlgOut"},
"getLCCC ": {"prefix": "getLCCC","body": ["getLCCC(${1:scaleNum}, ${2:V});"],"description": "getLCCC"},
"getLCCD ": {"prefix": "getLCCD","body": ["getLCCD(${1:scaleNum}, ${2:V});"],"description": "getLCCD"},
"getLCCW ": {"prefix": "getLCCW","body": ["getLCCW(${1:scaleNum}, ${2:V});"],"description": "getLCCW"},
"GetWVal ": {"prefix": "GetWVal","body": ["GetWVal(${1:scaleNum}, ${2:V});"],"description": "GetWVal"},
"GetZeroCount ": {"prefix": "GetZeroCount","body": ["GetZeroCount(${1:scaleNum}, ${2:V});"],"description": "GetZeroCount"},
"PulseCount ": {"prefix": "PulseCount","body": ["PulseCount(${1:scaleNum}, ${2:C});"],"description": "PulseCount"},
"ClearPulseCount ": {"prefix": "ClearPulseCount","body": ["ClearPulseCount(${1:scaleNum};"],"description": "ClearPulseCount"},
"AcquireTare ": {"prefix": "AcquireTare","body": ["AcquireTare(${1:scaleNum});"],"description": "AcquireTare"},
"SetTare ": {"prefix": "SetTare","body": ["SetTare(${1:scaleNum}, ${2:Units}, {3:W});"],"description": "SetTare"},
"GetTareType ": {"prefix": "GetTareType","body": ["GetTareType(${1:scaleNum}, ${2:TareType});"],"description": "GetTareType"},
"ClearTare ": {"prefix": "ClearTare","body": ["ClearTare(${1:scaleNum});"],"description": "ClearTare"},
"GetROC ": {"prefix": "GetROC","body": ["GetROC(${1:scaleNum}, ${2:R});"],"description": "GetROC"},
"GetAccum ": {"prefix": "GetAccum","body": ["GetAccum(${1:scaleNum}, ${2:Units} ${3:W});"],"description": "GetAccum"},
"SetAccum ": {"prefix": "SetAccum","body": ["SetAccum(${1:scaleNum}, ${2:Units} ${3:W});"],"description": "SetAccum"},
"GetAvgAccum ": {"prefix": "GetAvgAccum","body": ["GetAvgAccum(${1:scaleNum}, ${2:Units}, ${3:W});"],"description": "GetAvgAccum"},
"GetAccumCount ": {"prefix": "GetAccumCount","body": ["GetAccumCount(${1:scaleNum}, ${2:N});"],"description": "GetAccumCount"},
"GetAccumDate ": {"prefix": "GetAccumDate","body": ["GetAccumDate(${1:scaleNum}, ${2:D});"],"description": "GetAccumDate"},
"GetAccumTime ": {"prefix": "GetAccumTime","body": ["GetAccumTime(${1:scaleNum}, ${2:V});"],"description": "GetAccumTime"},
"ClearAccum ": {"prefix": "ClearAccum","body": ["ClearAccum(${1:scaleNum});"],"description": "ClearAccum"},
"SelectScale ": {"prefix": "SelectScale","body": ["SelectScale(${1:scaleNum});"],"description": "SelectScale"},
"GetMode ": {"prefix": "GetMode","body": ["GetMode(${1:scaleNum}, ${2:M});"],"description": "GetMode"},
"GetUnits ": {"prefix": "GetUnits","body": ["GetUnits(${1:scaleNum}, ${2:Units});"],"description": "GetUnits"},
"GetUnitsString ": {"prefix": "GetUnitsString","body": ["GetUnitsString(${1:scaleNum}, ${2:Units}, ${3:V});"],"description": "GetUnitsString"},
"InCOZ ": {"prefix": "InCOZ","body": ["InCOZ(${1:scaleNum}, ${2:V});"],"description": "InCOZ"},
"InRange ": {"prefix": "InRange","body": ["InRange(${1:scaleNum}, ${2:V});"],"description": "InRange"},
"InMotion ": {"prefix": "InMotion","body": ["InMotion(${1:scaleNum}, ${2:V});"],"description": "InMotion"},
"SetMode ": {"prefix": "SetMode","body": ["SetMode(${1:scaleNum}, ${2:Mode});"],"description": "SetMode"},
"SetUnits ": {"prefix": "SetUnits","body": ["SetUnits(${1:scaleNum}, ${2:Units});"],"description": "SetUnits"},
"ZeroScale ": {"prefix": "ZeroScale","body": ["ZeroScale(${1:scaleNum});"],"description": "ZeroScale"},
"GetSPValue ": {"prefix": "GetSPValue","body": ["GetSPValue(${1:SPint}, ${2:V});"],"description": "GetSPValue"},
"GetSPBand ": {"prefix": "GetSPBand","body": ["GetSPBand(${1:SPint}, ${2:V});"],"description": "GetSPBand"},
"GetSPPreact ": {"prefix": "GetSPPreact","body": ["GetSPPreact(${1:SPint}, ${2:V});"],"description": "GetSPPreact"},
"GetSPHyster ": {"prefix": "GetSPHyster","body": ["GetSPHyster(${1:SPint}, ${2:V});"],"description": "GetSPHyster"},
"GetSPTime ": {"prefix": "GetSPTime","body": ["GetSPTime(${1:SPint}, ${2:V});"],"description": "GetSPTime"},
"GetSPDuration ": {"prefix": "GetSPDuration","body": ["GetSPDuration(${1:SPint}, ${2:V});"],"description": "GetSPDuration"},
"GetSPCaptured ": {"prefix": "GetSPCaptured","body": ["GetSPCaptured(${1:SPint}, ${2:V});"],"description": "GetSPCaptured"},
"GetSPCount ": {"prefix": "GetSPCount","body": ["GetSPCount(${1:SPint}, ${2:V});"],"description": "GetSPCount"},
"GetSPPreCount ": {"prefix": "GetSPPreCount","body": ["GetSPPreCount(${1:SPint}, ${2:V});"],"description": "GetSPPreCount"},
"SetSPValue ": {"prefix": "SetSPValue","body": ["SetSPValue(${1:SPint}, ${2:V});"],"description": "SetSPValue"},
"SetSPBand ": {"prefix": "SetSPBand","body": ["SetSPBand(${1:SPint}, ${2:V});"],"description": "SetSPBand"},
"SetSPPreact ": {"prefix": "SetSPPreact","body": ["SetSPPreact(${1:SPint}, ${2:V});"],"description": "SetSPPreact"},
"SetSPHyster ": {"prefix": "SetSPHyster","body": ["SetSPHyster(${1:SPint}, ${2:V});"],"description": "SetSPHyster"},
"SetSPTime ": {"prefix": "SetSPTime","body": ["SetSPTime(${1:SPint}, ${2:V});"],"description": "SetSPTime"},
"SetSPDuration ": {"prefix": "SetSPDuration","body": ["SetSPDuration(${1:SPint}, ${2:V});"],"description": "SetSPDuration"},
"SetSPCaptured ": {"prefix": "SetSPCaptured","body": ["SetSPCaptured(${1:SPint}, ${2:V});"],"description": "SetSPCaptured"},
"SetSPCount ": {"prefix": "SetSPCount","body": ["SetSPCount(${1:SPint}, ${2:V});"],"description": "SetSPCount"},
"SetSPPreCount ": {"prefix": "SetSPPreCount","body": ["SetSPPreCount(${1:SPint}, ${2:V});"],"description": "SetSPPreCount"},
"DisableSP ": {"prefix": "DisableSP","body": ["DisableSP(${1:SPint});"],"description": "DisableSP"},
"EnableSP ": {"prefix": "EnableSP","body": ["EnableSP(${1:SPint});"],"description": "EnableSP"},
"SetBatchingMode ": {"prefix": "SetBatchingMode","body": ["SetBatchingMode(${1:BatchingMode});"],"description": "SetBatchingMode"},
"GetBatchingMode ": {"prefix": "GetBatchingMode","body": ["GetBatchingMode(${1:BatchStatus});"],"description": "GetBatchingMode"},
"GetCurrentSP ": {"prefix": "GetCurrentSP","body": ["GetCurrentSP(${1:SPint});"],"description": "GetCurrentSP"},
"StartStreaming ": {"prefix": "StartStreaming","body": ["StartStreaming(${1:P_int});"],"description": "StartStreaming"},
"StopStreaming ": {"prefix": "StopStreaming","body": ["StopStreaming(${1:SPint});"],"description": "StopStreaming"},
"Print ": {"prefix": "Print","body": ["Print(${1:PrintFormat});"],"description": "Print"},
"SetPrintText ": {"prefix": "SetPrintText","body": ["SetPrintText(${1:fmt_num}, ${2:text_string});"],"description": "SetPrintText"},
"GetDigIn ": {"prefix": "GetDigIn","body": ["GetDigIn(${1:Slot_Int}, ${2:D_int}, ${3:V_int});"],"description": "GetDigIn"},
"GetDigOut ": {"prefix": "GetDigOut","body": ["GetDigOut(${1:Slot_Int}, ${2:D_int}, ${3:V_int});"],"description": "GetDigOut"},
"SetDigOut ": {"prefix": "SetDigOut","body": ["SetDigOut(${1:Slot_Int}, ${2:D_int}, ${3:V_int});"],"description": "SetDigOut"},
"Abs ": {"prefix": "Abs","body": ["Abs(${1:X_real});"],"description": "Abs"},
"Asc ": {"prefix": "Asc","body": ["Asc(${1:S_String});"],"description": "Asc"},
"Atan ": {"prefix": "Atan","body": ["Atan(${1:X_real});"],"description": "Atan"},
"BitAnd ": {"prefix": "BitAnd","body": ["BitAnd(${1:X_int}, ${2:Y_int});"],"description": "BitAnd"},
"BitOr ": {"prefix": "BitOr","body": ["BitOr(${1:X_int}, ${2:Y_int});"],"description": "BitOr"},
"BitNot ": {"prefix": "BitNot","body": ["BitNot(${1:X_int}, ${2:Y_int});"],"description": "BitNot"},
"BitXor ": {"prefix": "BitXor","body": ["BitXor(${1:X_int}, ${2:Y_int});"],"description": "BitXor"},
"Ceil ": {"prefix": "Ceil","body": ["Ceil(${1:X_real});"],"description": "Ceil"},
"Chr$ ": {"prefix": "Chr$","body": ["Chr$(${1:i_int});"],"description": "Chr$"},
"Cos ": {"prefix": "Cos","body": ["Cos(${1:X_real});"],"description": "Cos"},
"Exp ": {"prefix": "Exp","body": ["Exp(${1:X_real});"],"description": "Exp"},
"Hex$ ": {"prefix": "Hex$","body": ["Hex$(${1:i_int});"],"description": "Hex$"},
"IntegerToString ": {"prefix": "IntegerToString","body": ["IntegerToString(${1:I}, ${2:W});"],"description": "IntegerToString"},
"LCase ": {"prefix": "LCase","body": ["LCase(${1:S});"],"description": "LCase"},
"Left$ ": {"prefix": "Left$","body": ["Left$(${1:S}, ${2:i_int});"],"description": "Left$"},
"Len ": {"prefix": "Len","body": ["Len(${1:S});"],"description": "Len"},
"Log ": {"prefix": "Log","body": ["Log(${1:X_real});"],"description": "Log"},
"Log10 ": {"prefix": "Log10","body": ["Log10(${1:X_real});"],"description": "Log10"},
"Mid$ ": {"prefix": "Mid$","body": ["Mid$(${1:S}, ${2:Start_int}, ${3:Length_int});"],"description": "Mid$"},
"Oct$ ": {"prefix": "Oct$","body": ["Oct$(${1:i_int});"],"description": "Oct$"},
"RealToString ": {"prefix": "RealToString","body": ["RealToString(${1:R}, ${2:W}, ${3:P});"],"description": "RealToString"},
"Right$ ": {"prefix": "Right$","body": ["Right$(${1:S}, ${2:i_int});"],"description": "Right$"},
"Sign ": {"prefix": "Sign","body": ["Sign(${1:X_real});"],"description": "Sign"},
"Sin ": {"prefix": "Sin","body": ["Sin(${1:x_real});"],"description": "Sin"},
"Space$ ": {"prefix": "Space$","body": ["Space$(${1:i_int});"],"description": "Space$"},
"Sqrt ": {"prefix": "Sqrt","body": ["Sqrt(${1:X_real});"],"description": "Sqrt"},
"StringSpaceCompress ": {"prefix": "StringSpaceCompress","body": ["StringSpaceCompress(${1:Region_string});"],"description": "StringSpaceCompress"},
"StringToInteger ": {"prefix": "StringToInteger","body": ["StringToInteger(${1:S});"],"description": "StringToInteger"},
"StringToReal ": {"prefix": "StringToReal","body": ["StringToReal(${1:S});"],"description": "StringToReal"},
"Tan ": {"prefix": "Tan","body": ["Tan(${1:x_real});"],"description": "Tan"},
"UCase$ ": {"prefix": "UCase$","body": ["UCase$(${1:S});"],"description": "UCase$"},
"KeyPress ": {"prefix": "KeyPress","body": ["KeyPress(${1:key_Keys});"],"description": "KeyPress"},
"LockKey ": {"prefix": "LockKey","body": ["LockKey(${1:key_Keys});"],"description": "LockKey"},
"SetConsecNum ": {"prefix": "SetConsecNum","body": ["SetConsecNum(${1:Value_int});"],"description": "SetConsecNum"},
"SetUID ": {"prefix": "SetUID","body": ["SetUID(${1:newid_string});"],"description": "SetUID"},
"UnlockKey ": {"prefix": "UnlockKey","body": ["UnlockKey(${1:key_Keys});"],"description": "UnlockKey"},
"ResetTimer ": {"prefix": "ResetTimer","body": ["ResetTimer(${1:T_int});"],"description": "ResetTimer"},
"SetTimer ": {"prefix": "SetTimer","body": ["SetTimer(${1:T_int}, ${2:Value_int});"],"description": "SetTimer"},
"SetTimerMode ": {"prefix": "SetTimerMode","body": ["SetTimerMode(${1:T_int}, ${2:Mode_timermode});"],"description": "SetTimerMode"},
"SetTimerDigOut ": {"prefix": "SetTimerDigOut","body": ["SetTimerDigOut(${1:T_int}, ${2:S_int}, ${3:D_int});"],"description": "SetTimerDigOut"},
"StartTimer ": {"prefix": "StartTimer","body": ["StartTimer(${1:T_int});"],"description": "StartTimer"},
"StopTimer ": {"prefix": "StopTimer","body": ["StopTimer(${1:T_int});"],"description": "StopTimer"},
"DisplayStatus ": {"prefix": "DisplayStatus","body": ["DisplayStatus(${1:Msg_string});"],"description": "DisplayStatus"},
"PromptUser ": {"prefix": "PromptUser","body": ["PromptUser(${1:Msg_string});"],"description": "PromptUser"},
"SetEntry ": {"prefix": "SetEntry","body": ["SetEntry(${1:S_string});"],"description": "SetEntry"},
"FileOpen ": {"prefix": "FileOpen","body": ["FileOpen(${1:FileName_string}, ${2:Device}, ${3:FileAccessMode});"],"description": "FileOpen"},
"USBFileOpen ": {"prefix": "USBFileOpen","body": ["USBFileOpen(${1:FileName_string}, ${2:FileAccessMode});"],"description": "USBFileOpen"},
"FileExists ": {"prefix": "FileExists","body": ["FileExists(${1:FileName_string}, ${2:FileDevice});"],"description": "FileExists"},
"USBFileExists ": {"prefix": "USBFileExists","body": ["USBFileExists(${1:FileName_string});"],"description": "USBFileExists"},
"FileDelete ": {"prefix": "FileDelete","body": ["FileDelete(${1:FileName_string}, ${2:FileDevice});"],"description": "FileDelete"},
"USBFileDelete ": {"prefix": "USBFileDelete","body": ["USBFileDelete(${1:FileName_string});"],"description": "USBFileDelete"},
"SetFileTermin ": {"prefix": "SetFileTermin","body": ["SetFileTermin(${1:FileLineTermination});"],"description": "SetFileTermin"},
"SysCodeToString ": {"prefix": "SysCodeToString","body": ["SysCodeToString(${1:Code_SysCode});"],"description": "SysCodeToString"},
"ChartInit ": {"prefix": "ChartInit","body": ["ChartInit(${1:widget_num}, ${2:fillColor}, ${3:lineColor}, ${4:pointColor}, ${5:maxPoints});"],"description": "ChartInit"},
"ChartPlot ": {"prefix": "ChartPlot","body": ["ChartPlot(${1:widget_num}, ${2:label}, ${3:value});"],"description": "ChartPlot"},
"ChartSetAnimation ": {"prefix": "ChartSetAnimation","body": ["ChartSetAnimation(${1:widget_num});"],"description": "ChartSetAnimation"},
"ChartRender ": {"prefix": "ChartRender","body": ["ChartRender(${1:widget_num});"],"description": "ChartRender"},
"ChartInsertToExisting ": {"prefix": "ChartInsertToExisting","body": ["ChartInsertToExisting(${1:widget_num}, ${2:label}, ${3:value});"],"description": "ChartInsertToExisting"},
"ReadLn ": {"prefix": "ReadLn","body": ["ReadLn(${1:varD_string});"],"description": "ReadLn"}
}